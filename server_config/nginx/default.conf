map $http_upgrade $type {
  default "web";
  websocket "ws";
}
upstream websocket {
    server 127.0.0.1:6001;
}
server {

    listen 80;
    listen [::]:80;
    
    client_max_body_size 12M;    
    proxy_connect_timeout 120;
    proxy_send_timeout 120;
    proxy_read_timeout 120;
    send_timeout 120;
    fastcgi_read_timeout 120;

    root /var/www/html/public;
    index index.php index.html index.htm index.nginx-debian.html;

    charset utf-8;
    
    server_name 127.0.0.1;

    location ~ \.php$ {
        try_files $uri /index.php =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
    
    location / {
        try_files /nonexistent @$type;
    }
  
    location @web {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    location @ws {
        proxy_pass             http://websocket;
        # proxy_set_header Host  $host;
        # proxy_read_timeout     60;
        # proxy_connect_timeout  60;
        # proxy_redirect         off;

        # Allow the use of websockets
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /var/www/html/server_config/nginx/cc_ssl/cert-ca.crt;
    ssl_certificate_key /var/www/html/server_config/nginx/cc_ssl/privkey.key;
    # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot


    # Redirect non-https traffic to https
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot
}
# upstream websocket {
#     server 127.0.0.1:6001;
# }
# server {
#     listen       80 default_server;
#     listen 443 ssl;
#     listen        [::]:443 ssl;
#     server_name  localhost;

#     client_max_body_size 1024M;    
#     proxy_connect_timeout 3000;
#     proxy_send_timeout 3000;
#     proxy_read_timeout 3000;
#     send_timeout 3000;
#     fastcgi_read_timeout 3000;

#     ssl_certificate /var/www/html/server_config/nginx/ssl/default.crt;
#     ssl_certificate_key /var/www/html/server_config/nginx/ssl/default.key;
#     ssl_protocols       TLSv1.2 TLSv1.3;
#     ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
#     ssl_prefer_server_ciphers on;

#     root /var/www/html/public;
#     index index.php;
    
#     # location /app/ {
#     #     proxy_read_timeout     300;
#     #     proxy_connect_timeout  300;
#     #     proxy_redirect         off;
#     #     proxy_http_version 1.1;
#     #     proxy_set_header Upgrade $http_upgrade;
#     #     proxy_set_header Connection "Upgrade";
#     #     proxy_set_header Host $host;
#     #     proxy_pass http://localhost:6001/app/;
#     # }

#     # location /apps/ {
#     #     proxy_http_version 1.1;
#     #     proxy_set_header Upgrade $http_upgrade;
#     #     proxy_set_header Connection "Upgrade";
#     #     proxy_set_header Host $host;
#     #     proxy_read_timeout     300;
#     #     proxy_connect_timeout  300;
#     #     proxy_redirect         off;
#     #     proxy_pass http://localhost:6001/apps/;
#     # }

#     location / {
#         try_files $uri $uri/ /index.php?$query_string;
#     }

#     location /ws {
#             proxy_pass https://websocket;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection $connection_upgrade;
#     }

#     if (!-e $request_filename) {
#         rewrite ^.*$ /index.php last;
#     }

#     location ~ \.php$ {
#         fastcgi_pass 127.0.0.1:9000;
#         fastcgi_index index.php;
#         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#         include fastcgi_params;  
#     }
# }
